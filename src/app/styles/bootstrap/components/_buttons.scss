@use "../../panels";

/*
 * Baw button mixin. Changes the text, border, and background colours of the
 * bootstrap buttons to use css variables defined in _root.scss. You can view
 * which properties to modify in the bootstrap documentation:
 * https://getbootstrap.com/docs/5.0/components/buttons/ and
 * https://github.com/twbs/bootstrap/blob/v5.0.2/scss/_buttons.scss
 */
@mixin baw-button($property) {
  color: var(--baw-#{$property}-contrast);
  background-color: var(--baw-#{$property});
  border-color: var(--baw-#{$property});

  &:hover {
    color: var(--baw-#{$property}-darker-contrast);
    background-color: var(--baw-#{$property}-darker);
    border-color: var(--baw-#{$property}-darker);
  }

  &.disabled,
  &:disabled {
    color: var(--baw-#{$property}-lighter-contrast);
    background-color: var(--baw-#{$property}-lighter);
    border-color: var(--baw-#{$property}-lighter);
  }
}

/*
 * Baw outline mixin. Changes the text, border, and background colours of the
 * outlined bootstrap buttons to use css variables defined in _root.scss You can
 * view which properties to modify in the bootstrap documentation:
 * https://getbootstrap.com/docs/5.0/components/buttons/ and
 * https://github.com/twbs/bootstrap/blob/v5.0.2/scss/_buttons.scss
 */
@mixin baw-button-outline($property) {
  @include baw-button($property);
  background-color: unset;
  color: var(--baw-#{$property});
}

@each $theme, $default in panels.$theme-colors {
  .btn-#{$theme} {
    @include baw-button($theme);
  }

  .btn-outline-#{$theme} {
    @include baw-button-outline($theme);
  }
}

/* Custom highlight button */

.btn-highlight {
  @include baw-button("highlight");
}

.btn-outline-highlight {
  @include baw-button-outline("highlight");
}
